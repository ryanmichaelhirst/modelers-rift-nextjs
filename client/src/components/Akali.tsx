/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
// @ts-ignore
import akali from '../assets/akali.glb'

export default function Model(props) {
  const group = useRef()
  // @ts-ignore
  const { nodes, materials, animations } = useGLTF(akali)
  const { actions } = useAnimations(animations, group)

  useFrame(({ clock }) => {
    const a = clock.getElapsedTime()
    // @ts-ignore
    group.current.rotation.y = a * 0.3
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI, 0, 0]} scale={[-1, -1, -1]}>
        <primitive object={nodes.Root} />
        <primitive object={nodes.L_Kunai_Spawn_a} />
        <primitive object={nodes.L_Kunai_Spawn_b} />
        <primitive object={nodes.L_Kunai_Spawn_c} />
        <primitive object={nodes.R_Kunai_Spawn_a} />
        <primitive object={nodes.R_Kunai_Spawn_b} />
        <primitive object={nodes.R_Kunai_Spawn_c} />
        <primitive object={nodes.Snap_Kama2World} />
        <primitive object={nodes.Snap_KamaGrip2World} />
        <primitive object={nodes.Snap_Kunai2World} />
        <primitive object={nodes.Buffbone_Cstm_Healthbar} />
        <primitive object={nodes.Buffbone_Glb_Channel_Loc} />
        <primitive object={nodes.Buffbone_Glb_Ground_Loc} />
        <primitive object={nodes.Buffbone_Glb_Weapon_1} />
        <primitive object={nodes.C_Buffbone_Glb_Center_Loc} />
        <primitive object={nodes.C_Buffbone_Glb_Layout_Loc} />
        <primitive object={nodes.C_Buffbone_Glb_Overhead_Loc} />
        <primitive object={nodes.L_Buffbone_Glb_Knee_Loc} />
        <primitive object={nodes.R_Buffbone_Glb_Knee_Loc} />
        <skinnedMesh
          geometry={nodes.Mesh_0_1.geometry}
          material={materials.Akali_Base_Body_Mat}
          skeleton={nodes.Mesh_0_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_2.geometry}
          material={materials.mask}
          skeleton={nodes.Mesh_0_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_3.geometry}
          material={materials.kama_left}
          skeleton={nodes.Mesh_0_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_4.geometry}
          material={materials.kama_grip}
          skeleton={nodes.Mesh_0_4.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_5.geometry}
          material={materials.kama_right}
          skeleton={nodes.Mesh_0_5.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_6.geometry}
          material={materials.kunai_hand}
          skeleton={nodes.Mesh_0_6.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_7.geometry}
          material={materials.recall}
          skeleton={nodes.Mesh_0_7.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_8.geometry}
          material={materials.chopsticks}
          skeleton={nodes.Mesh_0_8.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_9.geometry}
          material={materials.ramen}
          skeleton={nodes.Mesh_0_9.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh_0_10.geometry}
          material={materials.ramen_noodles}
          skeleton={nodes.Mesh_0_10.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload(akali)
